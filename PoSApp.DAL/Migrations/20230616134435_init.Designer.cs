// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoSApp.DAL;

#nullable disable

namespace PoSApp.DAL.Migrations
{
    [DbContext(typeof(PosDbContext))]
    [Migration("20230616134435_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PoSApp.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Marka 1",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6516),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Marka 2",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6518),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Marka 3",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6520),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "Marka 4",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6521),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("PoSApp.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("PoSApp.Entities.CartDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductUnit")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("ProductUnitType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("PoSApp.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Kategori 1",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6824),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Kategori 2",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6827),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Kategori 3",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6829),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Kategori 4",
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6831),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("PoSApp.Entities.PayedAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PayedType")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("PayedAmount");
                });

            modelBuilder.Entity("PoSApp.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductBarcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductUnitType")
                        .HasColumnType("int");

                    b.Property<int>("ProductVat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6899),
                            IsDeleted = false,
                            ProductBarcode = "12345",
                            ProductCode = "PR001",
                            ProductDescription = "Ürün açıklaması 1",
                            ProductName = "Ürün 1",
                            ProductPrice = 10m,
                            ProductUnitType = 0,
                            ProductVat = 18
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6902),
                            IsDeleted = false,
                            ProductBarcode = "12345",
                            ProductCode = "PR002",
                            ProductDescription = "Ürün açıklaması 2",
                            ProductName = "Ürün 2",
                            ProductPrice = 20m,
                            ProductUnitType = 0,
                            ProductVat = 8
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6905),
                            IsDeleted = false,
                            ProductBarcode = "12345",
                            ProductCode = "PR003",
                            ProductDescription = "Ürün açıklaması 3",
                            ProductName = "Ürün 3",
                            ProductPrice = 30m,
                            ProductUnitType = 0,
                            ProductVat = 1
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6908),
                            IsDeleted = false,
                            ProductBarcode = "12345",
                            ProductCode = "PR004",
                            ProductDescription = "Ürün açıklaması 4",
                            ProductName = "Ürün 4",
                            ProductPrice = 40m,
                            ProductUnitType = 0,
                            ProductVat = 8
                        });
                });

            modelBuilder.Entity("PoSApp.Entities.StockIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StockInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockInRefNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("StockIns");
                });

            modelBuilder.Entity("PoSApp.Entities.StockInDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("StockInDetailUnit")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("StockInId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockInId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StockInDetails");
                });

            modelBuilder.Entity("PoSApp.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SupplierAddress1")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("SupplierAddress2")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("SupplierManager")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupplierNote")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SupplierPhone1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierPhone2")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierTaxAdministrator")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierTaxNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6862),
                            IsDeleted = false,
                            SupplierAddress1 = "Adres 11",
                            SupplierAddress2 = "Adres 21",
                            SupplierManager = "Yönetici 1",
                            SupplierName = "Tedarikçi 1",
                            SupplierNote = "Firma hakkında 1",
                            SupplierPhone1 = "Phone 11",
                            SupplierPhone2 = "Phone 21",
                            SupplierTaxAdministrator = "Vergi Dairesi 1",
                            SupplierTaxNumber = "Vergi Numarası 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6864),
                            IsDeleted = false,
                            SupplierAddress1 = "Adres 21",
                            SupplierAddress2 = "Adres 22",
                            SupplierManager = "Yönetici 2",
                            SupplierName = "Tedarikçi 2",
                            SupplierNote = "Firma hakkında 2",
                            SupplierPhone1 = "Phone 21",
                            SupplierPhone2 = "Phone 22",
                            SupplierTaxAdministrator = "Vergi Dairesi 2",
                            SupplierTaxNumber = "Vergi Numarası 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6867),
                            IsDeleted = false,
                            SupplierAddress1 = "Adres 31",
                            SupplierAddress2 = "Adres 23",
                            SupplierManager = "Yönetici 3",
                            SupplierName = "Tedarikçi 3",
                            SupplierNote = "Firma hakkında 3",
                            SupplierPhone1 = "Phone 31",
                            SupplierPhone2 = "Phone 23",
                            SupplierTaxAdministrator = "Vergi Dairesi 3",
                            SupplierTaxNumber = "Vergi Numarası 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6869),
                            IsDeleted = false,
                            SupplierAddress1 = "Adres 41",
                            SupplierAddress2 = "Adres 24",
                            SupplierManager = "Yönetici 4",
                            SupplierName = "Tedarikçi 4",
                            SupplierNote = "Firma hakkında 4",
                            SupplierPhone1 = "Phone 41",
                            SupplierPhone2 = "Phone 24",
                            SupplierTaxAdministrator = "Vergi Dairesi 4",
                            SupplierTaxNumber = "Vergi Numarası 4"
                        });
                });

            modelBuilder.Entity("PoSApp.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warehouse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6924),
                            IsDeleted = false,
                            WarehouseName = "Depo 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 6, 16, 16, 44, 35, 766, DateTimeKind.Local).AddTicks(6926),
                            IsDeleted = false,
                            WarehouseName = "Depo 2"
                        });
                });

            modelBuilder.Entity("PoSApp.Entities.CartDetail", b =>
                {
                    b.HasOne("PoSApp.Entities.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoSApp.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PoSApp.Entities.PayedAmount", b =>
                {
                    b.HasOne("PoSApp.Entities.Cart", "Cart")
                        .WithMany("PayedAmounts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("PoSApp.Entities.Product", b =>
                {
                    b.HasOne("PoSApp.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoSApp.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PoSApp.Entities.StockIn", b =>
                {
                    b.HasOne("PoSApp.Entities.Supplier", "Supplier")
                        .WithMany("StockIns")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PoSApp.Entities.StockInDetail", b =>
                {
                    b.HasOne("PoSApp.Entities.Product", "Product")
                        .WithMany("StockInDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoSApp.Entities.StockIn", "StockIn")
                        .WithMany("StockInDetails")
                        .HasForeignKey("StockInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoSApp.Entities.Warehouse", "Warehouse")
                        .WithMany("StockInDetails")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockIn");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("PoSApp.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PoSApp.Entities.Cart", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("PayedAmounts");
                });

            modelBuilder.Entity("PoSApp.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PoSApp.Entities.Product", b =>
                {
                    b.Navigation("StockInDetails");
                });

            modelBuilder.Entity("PoSApp.Entities.StockIn", b =>
                {
                    b.Navigation("StockInDetails");
                });

            modelBuilder.Entity("PoSApp.Entities.Supplier", b =>
                {
                    b.Navigation("StockIns");
                });

            modelBuilder.Entity("PoSApp.Entities.Warehouse", b =>
                {
                    b.Navigation("StockInDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
